{"version":3,"file":"static/js/441.2def8523.chunk.js","mappings":"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","sources":["pages/Home/NavTopbar.jsx","layout/GlobalLayout.jsx","components/HomeModals/DivisionModal.jsx","components/HomeModals/DetailsModal.jsx","components/HomeModals/DivisionAndTeamModal.jsx","components/product/EventData.jsx","pages/Home/Home.jsx"],"sourcesContent":["import Navbar from \"react-bootstrap/Navbar\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { HiBars3 } from \"react-icons/hi2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GlobalInfo } from \"../../App\";\r\nimport logo from \"../../assets/images/usmlsa_logo.png\";\r\nfunction NavTopbar() {\r\n  const { user } = useSelector((state) => state.user);\r\n  const { setIsSidebarOpen } = useContext(GlobalInfo);\r\n  const Token = user?.access_token;\r\n  const Navigate = useNavigate();\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"persist:grow-share\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar className=\"bg-dark py-3 text-white justify-content-between justify-content-lg-baseline px-lg-5 \">\r\n        <Image width={200} className=\"ps-2\" src={logo} alt=\"\" />\r\n        <div className=\"d-none d-lg-flex gap-3 me-4\">\r\n          {Token ? (\r\n            <>\r\n              <button\r\n                className=\"text-white py-2 px-3 Login-btn rounded\"\r\n                onClick={() => {\r\n                  if (user.roles[0] === \"ADMIN\") {\r\n                    Navigate(\"/dashboard\");\r\n                  } else if (user.roles[0] === \"MANAGER\") {\r\n                    Navigate(\"/dashboard/allteams\");\r\n                  } else {\r\n                    Navigate(\"/dashboard/yourteam\");\r\n                  }\r\n                }}\r\n              >\r\n                Dashboard\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"text-white py-2 px-3 Login-btn rounded fw-bold\"\r\n                onClick={() => Navigate(\"/auth/login\")}\r\n              >\r\n                Login\r\n              </button>\r\n              <button\r\n                className=\"text-white py-2 px-3 Signup-btn rounded fw-bold\"\r\n                onClick={() => Navigate(\"/auth/register\")}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex d-lg-none \">\r\n          <HiBars3\r\n            className=\"icon\"\r\n            onClick={() => setIsSidebarOpen((prev) => !prev)}\r\n            fontSize={30}\r\n          />\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavTopbar;\r\n","import React from \"react\";\r\nimport FindEvents from \"../components/product/FindEvents\";\r\nimport NavTopbar from \"../pages/Home/NavTopbar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst GlobalLayout = (WrapComponent) => {\r\n  return function Globally(props) {\r\n    const location = useLocation();\r\n    const pathname = [\"/myaccount\"];\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavTopbar />\r\n        <div className=\"\">\r\n          <main className=\"\">\r\n            {!pathname.includes(location.pathname) ? <FindEvents /> : null}\r\n            <WrapComponent {...props} />\r\n          </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default GlobalLayout;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport SpinNer from \"../LoadingSpinner/SpinNer\";\r\n\r\nconst DivisionModal = ({\r\n  show,\r\n  onClose,\r\n  divisionsData,\r\n  loading,\r\n  tournamentName,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      show={show}\r\n      onHide={onClose}\r\n      aria-labelledby=\"division-modal-title\"\r\n    >\r\n      <Modal.Header closeButton className=\"bg-light text-dark\">\r\n        <Modal.Title id=\"division-modal-title\">{tournamentName}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"bg-light text-dark\">\r\n        {loading ? (\r\n          <SpinNer />\r\n        ) : divisionsData?.data?.length > 0 ? (\r\n          <div className=\"list-group\">\r\n            {divisionsData?.data?.map((division, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"d-flex justify-content-between align-items-center border-bottom py-2\"\r\n              >\r\n                <span className=\"fw-bold fs-6\">{division.divisionName}</span>\r\n                <span className=\"text-dark fw-bold fs-6\">\r\n                  ${division.entryFee}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-center\">No divisions available.</p>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DivisionModal;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport SpinNer from \"../LoadingSpinner/SpinNer\";\r\n\r\nconst DetailsModal = ({ show, onClose, description, loading }) => {\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={show}\r\n      onHide={onClose}\r\n      aria-labelledby=\"details-modal-title\"\r\n    >\r\n      <Modal.Header closeButton className=\"bg-light text-dark\">\r\n        <Modal.Title id=\"details-modal-title\">Tournament Details</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"bg-light text-dark\">\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SpinNer />\r\n          </div>\r\n        ) : (\r\n          //<p>{description || \"No description available.\"}</p>\r\n          <p>              \r\n            <h6 style={{ whiteSpace: 'pre-line' }}>\r\n                  {description || \"No description available.\"}\r\n            </h6>\r\n        </p>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DetailsModal;\r\n","import React from \"react\";\r\nimport { Modal, Accordion, Card, Button, ProgressBar } from \"react-bootstrap\";\r\nimport SpinNer from \"../LoadingSpinner/SpinNer\";\r\n\r\nconst DivisionAndTeamModal = ({\r\n  show,\r\n  onClose,\r\n  divisionsData,\r\n  loading,\r\n  tournamentName,\r\n}) => {\r\n  console.log(divisionsData);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      show={show}\r\n      onHide={onClose}\r\n      aria-labelledby=\"division-modal-title\"\r\n    >\r\n      <Modal.Header closeButton className=\"bg-light text-dark\">\r\n        <Modal.Title id=\"division-modal-title\">{tournamentName}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"bg-light text-dark\">\r\n        {loading ? (\r\n          <SpinNer />\r\n        ) : divisionsData?.data?.length > 0 ? (\r\n          <Accordion>\r\n            {divisionsData.data.map((division, index) => (\r\n              <Accordion.Item eventKey={index.toString()} key={index}>\r\n                <Accordion.Header>\r\n                  <div className=\"d-flex justify-content-between w-100\">\r\n                    <span className=\"fw-bold\">{division.divisionName}</span>\r\n                  </div>\r\n                  <div style={{ width: \"100%\", maxWidth: \"300px\" }}>\r\n                    <ProgressBar\r\n                      now={\r\n                        (division.registeredTeamsData.length /\r\n                          division.maxTeams) *\r\n                        100\r\n                      }\r\n                      variant=\"danger\"\r\n                      label={`${(\r\n                        (division.registeredTeamsData.length /\r\n                          division.maxTeams) *\r\n                        100\r\n                      ).toFixed(1)}%`}\r\n                    />\r\n                  </div>\r\n                  <span className=\"fw-bold text-dark mx-2\">\r\n                    ${division.entryFee}\r\n                  </span>\r\n                </Accordion.Header>\r\n                <Accordion.Body>\r\n                  {division.registeredTeamsData?.length > 0 ? (\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table table-bordered\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>#</th>\r\n                            <th>Team Name</th>\r\n                            <th>Division Name</th>\r\n                            <th>Zip Code</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {division.registeredTeamsData.map(\r\n                            (team, teamIndex) => (\r\n                              <tr key={teamIndex}>\r\n                                <td>{teamIndex + 1}</td>\r\n                                <td>{team.name}</td>\r\n                                <td>{division.divisionName}</td>\r\n                                <td>{team.zipCode}</td>\r\n                                <td>\r\n                                  <span\r\n                                    className=\"text-white my-2 p-2 rounded\"\r\n                                    style={{\r\n                                      background:\r\n                                        team?.teamStatus === \"ACTIVE\"\r\n                                          ? \"green\"\r\n                                          : \"red\",\r\n                                      fontSize: \"12px\",\r\n                                    }}\r\n                                  >\r\n                                    {team?.teamStatus}\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            )\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"text-muted\">No teams registered.</p>\r\n                  )}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            ))}\r\n          </Accordion>\r\n        ) : (\r\n          <p className=\"text-center\">No divisions available.</p>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DivisionAndTeamModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CiLocationOn } from \"react-icons/ci\";\r\nimport DivisionModal from \"../HomeModals/DivisionModal\";\r\nimport DetailsModal from \"../HomeModals/DetailsModal\";\r\nimport axios from \"axios\";\r\nimport DivisionAndTeamModal from \"../HomeModals/DivisionAndTeamModal\";\r\nconst Url = process.env.REACT_APP_MAIN_URL;\r\n\r\nconst EventData = ({\r\n  id, // tournament id\r\n  description, //Tournament Description\r\n  title,\r\n  subtitle,\r\n  ranking,\r\n  startDate,\r\n  endDate,\r\n  img,\r\n  numberOfRegisteredTeams,\r\n  showNumberOfRegisteredTeams,\r\n  showWhoIsComing,\r\n}) => {\r\n  const getitem = localStorage.getItem(\"Login\");\r\n  const IsLoggedIn = JSON.parse(getitem);\r\n  const Navigate = useNavigate();\r\n  const [show, setShow] = useState(false);\r\n  const [showTeamModal, setShowTeamModal] = useState(false);\r\n  const [teamData, setTeamData] = useState(false);\r\n  const [tournamentName, setTournamentName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [divisionsData, setDivisionsData] = useState([]);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [tournamnetInfo, setTournamentInfo] = useState(false);\r\n\r\n  const handleRegister = () => {\r\n    if (!IsLoggedIn) {\r\n      Navigate(\"/auth/login\");\r\n    } else {\r\n      Navigate(\"/myaccount\");\r\n    }\r\n  };\r\n\r\n  const handleCloseModel = () => {\r\n    setShow(false);\r\n    setShowTeamModal(false);\r\n    setShowDetails(false);\r\n    setTournamentName(\"\");\r\n  };\r\n\r\n  const handleShowModal = (name) => {\r\n    setTournamentName(name);\r\n  };\r\n  \r\n  const handleShowTeamModal = (name) => {\r\n    setTeamData(true);\r\n    setTournamentName(name);\r\n    setTournamentInfo(false);\r\n  };\r\n\r\n  const handleShowInfo = (name) => {\r\n    setTeamData(false);\r\n    setTournamentName(name);\r\n    setTournamentInfo(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tournamentName) {\r\n      console.log(tournamentName, \"tournamentName\");\r\n      setLoading(true);\r\n      axios\r\n        .get(\r\n          `${Url}api/divisions/search?tournamentName=${encodeURIComponent(\r\n            tournamentName\r\n          )}`\r\n        )\r\n        .then((response) => {\r\n          setDivisionsData(response.data);\r\n          console.log(\"TOURNEY DETAILS\", response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"API Error:\", error);\r\n          setDivisionsData([]);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n          if (teamData) {\r\n            setTeamData(false);\r\n            setShowTeamModal(true);\r\n          } else {\r\n\r\n              if (tournamnetInfo) {\r\n                setShowDetails(true);\r\n                setTournamentInfo(true);\r\n                setTeamData(false);\r\n              } else {\r\n                setShow(true);\r\n                setTeamData(false);\r\n              }\r\n          }\r\n        });\r\n    }\r\n  }, [tournamentName]);\r\n\r\n  return (\r\n    <div className=\"event-card\">\r\n      <div className=\"event-card-img\">\r\n        <img src={img} alt=\"tournament\" />\r\n      </div>\r\n      <div className=\"event-card-body\">\r\n        <div>\r\n          <span\r\n            className=\"event-location p-1 text-white rounded fs-6\"\r\n            style={{ background: title === \"ACTIVE\" ? \"green\" : \"red\" }}\r\n          >\r\n            {title}\r\n          </span>\r\n        </div>\r\n        <h6 className=\"text-black fs-6\">\r\n          <CiLocationOn color=\"black\" />\r\n          {subtitle}\r\n        </h6>\r\n        <h3 className=\"event-title fs-5\">{ranking}</h3>\r\n        <span className=\"event-date\">Start Date: {startDate}</span>\r\n        <span className=\"event-date\">End Date: {endDate}</span>\r\n        {showNumberOfRegisteredTeams && (\r\n          <div>\r\n            <span className=\"bg-dark text-white rounded p-1\">\r\n              No of Registered Teams:{\" \"}\r\n              {numberOfRegisteredTeams > 0 ? numberOfRegisteredTeams : 0}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"event-buttons\">\r\n          <>\r\n          <button\r\n                className=\"event-button bg-green\"\r\n                onClick={() => handleShowInfo(ranking)}\r\n              >\r\n                More Info\r\n              </button>\r\n          </>\r\n          \r\n          {showWhoIsComing && (\r\n            <>\r\n              <button\r\n                className=\"event-button bg-warning\"\r\n                onClick={() => handleShowTeamModal(ranking)}\r\n              >\r\n                Who's Coming\r\n              </button>\r\n              <button\r\n                className=\"event-button bg-dark text-white\"\r\n                onClick={() => handleShowModal(ranking)}\r\n              >\r\n                Division\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          <button\r\n            className=\"event-button Login-btn text-white\"\r\n            onClick={handleRegister}\r\n          >\r\n            {IsLoggedIn ? \"Buy Now\" : \"Register\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <DivisionModal\r\n        show={show}\r\n        onClose={handleCloseModel}\r\n        divisionsData={divisionsData}\r\n        loading={loading}\r\n        tournamentName={tournamentName}\r\n      />\r\n      <DivisionAndTeamModal\r\n        show={showTeamModal}\r\n        onClose={handleCloseModel}\r\n        divisionsData={divisionsData}\r\n        loading={loading}\r\n        tournamentName={tournamentName}\r\n      />\r\n\r\n      <DetailsModal\r\n        show={showDetails}\r\n        onClose={handleCloseModel}\r\n        description={divisionsData?.data?.[0]?.description || \"\"}\r\n        loading={loading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GlobalLayout from \"../../layout/GlobalLayout\";\r\nimport EventData from \"../../components/product/EventData\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GetDefaultTournamentsBySearch } from \"../../store/tournament/actions/actionsCreators\";\r\nimport SkeletonCard from \"../../components/SkeletonTable/SkeletonCard\";\r\nimport { PaginationControl } from \"react-bootstrap-pagination-control\";\r\n\r\nconst Home = () => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const { DefaultTournamentData, isLoading } = useSelector(\r\n    (state) => state.tournament\r\n  );\r\n  const Dispatch = useDispatch();\r\n  const fallbackImage =\r\n    \"https://media.bleacherreport.com/image/upload/c_fill,g_faces,w_3800,h_2000,q_95/v1677098974/ajakxjd0xfrxtu8ru7bo.jpg\"; // Default image URL\r\n\r\n  useEffect(() => {\r\n    Dispatch(GetDefaultTournamentsBySearch(page));\r\n  }, [Dispatch, page]);\r\n  return (\r\n    <div className=\"p-2 mt-2\">\r\n      <div className=\"mx-lg-5 search-box rounded\">\r\n        <h2 className=\"text-center text-uppercase py-2 fw-bold Login-btn text-white rounded-top\">\r\n          Featured Events\r\n        </h2>\r\n        {isLoading ? (\r\n          <SkeletonCard />\r\n        ) : DefaultTournamentData?.data?.length > 0 ? (\r\n          <div className=\"event-grid\">\r\n            {DefaultTournamentData.data.map((item, index) => {\r\n              let image = fallbackImage;\r\n              if (item.picture) {\r\n                try {\r\n                  const binaryData = atob(item.picture);\r\n                  const bytes = new Uint8Array(binaryData.length);\r\n                  for (let i = 0; i < binaryData.length; i++) {\r\n                    bytes[i] = binaryData.charCodeAt(i);\r\n                  }\r\n                  const blob = new Blob([bytes], { type: \"image/jpeg\" });\r\n                  image = URL.createObjectURL(blob);\r\n                } catch (e) {\r\n                  console.error(\"Error decoding image\", e);\r\n                }\r\n              }\r\n\r\n              return (\r\n                <EventData\r\n                  key={index}\r\n                  id = \"\"\r\n                  description = \"\"\r\n                  title={item?.status}\r\n                  subtitle={item?.venueName}\r\n                  ranking={item?.name}\r\n                  numberOfRegisteredTeams={item.numberOfRegisteredTeams}\r\n                  showNumberOfRegisteredTeams={item.showNumberOfRegisteredTeams}\r\n                  points={item?.points}\r\n                  showWhoIsComing={item.showWhoIsComing}\r\n                  img={image}\r\n                  startDate={item?.startDate}\r\n                  endDate={item?.endDate}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center flex-grow-1\">\r\n            <h2 className=\"text-center text-danger mt-5\">No Records Found.</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"my-4\">\r\n        {DefaultTournamentData.totalRecords > 10 && (\r\n          <PaginationControl\r\n            page={page + 1}\r\n            between={3}\r\n            limit={10}\r\n            total={DefaultTournamentData.totalRecords}\r\n            changePage={(page) => setPage(page - 1)}\r\n            ellipsis={1}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalLayout(Home);\r\n"],"names":["user","useSelector","state","setIsSidebarOpen","useContext","GlobalInfo","Token","access_token","Navigate","useNavigate","useEffect","localStorage","removeItem","Navbar","className","Image","width","src","logo","alt","onClick","roles","prev","fontSize","WrapComponent","props","location","useLocation","includes","pathname","FindEvents","show","onClose","divisionsData","loading","tournamentName","Modal","size","onHide","closeButton","id","SpinNer","data","length","map","division","index","divisionName","entryFee","description","style","whiteSpace","console","log","Accordion","eventKey","toString","maxWidth","ProgressBar","now","registeredTeamsData","maxTeams","variant","label","toFixed","team","teamIndex","name","zipCode","background","teamStatus","title","subtitle","ranking","startDate","endDate","img","numberOfRegisteredTeams","showNumberOfRegisteredTeams","showWhoIsComing","getitem","getItem","IsLoggedIn","JSON","parse","useState","setShow","showTeamModal","setShowTeamModal","teamData","setTeamData","setTournamentName","setLoading","setDivisionsData","showDetails","setShowDetails","tournamnetInfo","setTournamentInfo","handleCloseModel","axios","process","encodeURIComponent","then","response","catch","error","finally","color","GlobalLayout","page","setPage","tournament","DefaultTournamentData","isLoading","Dispatch","useDispatch","GetDefaultTournamentsBySearch","SkeletonCard","item","image","picture","binaryData","atob","bytes","Uint8Array","i","charCodeAt","blob","Blob","type","URL","createObjectURL","e","status","venueName","points","totalRecords","between","limit","total","changePage","ellipsis"],"sourceRoot":""}