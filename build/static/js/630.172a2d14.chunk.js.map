{"version":3,"file":"static/js/630.172a2d14.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"sourcesContent":["import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"names":["map","children","func","index","React","child","hasChildOfType","type","some","propTypes","PropTypes","tooltip","as","Feedback","ref","Component","className","props","_jsx","classNames","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","innerFormContext","useMemo","hasLabel","input","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","classes","size","htmlSize","plaintext","readOnly","createWithBsPrefix","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","Col","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select"],"sourceRoot":""}