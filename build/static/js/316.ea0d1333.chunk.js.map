{"version":3,"file":"static/js/316.ea0d1333.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","body","resolveContainerRef","ref","document","canUseDOM","getBoundingClientRect","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","getManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","element","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","options","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}