{"version":3,"file":"static/js/309.dcfe72c5.chunk.js","mappings":"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","sources":["components/tournament/AddTournamentFields.jsx","pages/Dashboard/AddTournament.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport InputField from \"../product/InputField\";\r\nimport { AllTournamentSchemas } from \"../../Schemas/Schemas\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Add_Tournaments,\r\n  GetTournamentsDetailsByTournamentId,\r\n  UpdateTournaments,\r\n} from \"../../store/tournament/actions/actionsCreators\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SelectTag from \"../product/SelectTag\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GlobalInfo } from \"../../App\";\r\nimport SpinNer from \"../LoadingSpinner/SpinNer\";\r\nconst AddTournamentFields = () => {\r\n  const Dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.user);\r\n  const { TournamentDetails } = useSelector((state) => state.tournament);\r\n  const { VenueData, isLoading } = useSelector((state) => state.venue);\r\n  const { TournamentEdit, TournamentId } = useContext(GlobalInfo);\r\n  const Navigate = useNavigate();\r\n  const Token = user?.access_token;\r\n  const initialValues = {\r\n    name: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    tournamentStatus: \"\",\r\n    numberOfDivisions: null,\r\n    venueId: null,\r\n    whoIsComing: false,\r\n    showRegisteredTeams: false,\r\n    description : \"\"\r\n  };\r\n  const tournamentStatusOptions = [\r\n    { value: \"ACTIVE\", label: \"ACTIVE\" },\r\n    { value: \"COMPLETED\", label: \"COMPLETED\" },\r\n    { value: \"CANCELED\", label: \"CANCELED\" },\r\n  ];\r\n  const VenueStatusOptions =\r\n    VenueData && VenueData?.data?.length > 0\r\n      ? VenueData?.data?.map((item) => ({\r\n          value: item?.venueId,\r\n          label: item?.name,\r\n        }))\r\n      : [];\r\n  const {\r\n    values,\r\n    handleChange,\r\n    errors,\r\n    handleSubmit,\r\n    setValues,\r\n    touched,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: AllTournamentSchemas,\r\n    onSubmit: (values, action) => {\r\n      let data;\r\n      if (values.venueId === \"\") {\r\n        data = {\r\n          name: values.name,\r\n          startDate: values.startDate,\r\n          endDate: values.endDate,\r\n          tournamentStatus: values.tournamentStatus,\r\n          numberOfDivisions: values.numberOfDivisions,\r\n          showWhoIsComing: values.whoIsComing,\r\n          showNumberOfRegisteredTeams: values.showRegisteredTeams,\r\n          description : values.description\r\n        };\r\n      } else {\r\n        data = {\r\n          name: values.name,\r\n          startDate: values.startDate,\r\n          endDate: values.endDate,\r\n          tournamentStatus: values.tournamentStatus,\r\n          numberOfDivisions: values.numberOfDivisions,\r\n          venueId: Number(values.venueId),\r\n          showWhoIsComing: values.whoIsComing,\r\n          showNumberOfRegisteredTeams: values.showRegisteredTeams,\r\n          description : values.description\r\n        };\r\n      }\r\n\r\n      if (TournamentEdit) {\r\n        Dispatch(UpdateTournaments(TournamentId, data, Token, Navigate));\r\n      } else {\r\n        Dispatch(Add_Tournaments(data, Token, Navigate));\r\n      }\r\n      action.resetForm();\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (TournamentEdit && TournamentDetails) {\r\n      Dispatch(GetTournamentsDetailsByTournamentId(TournamentId, Token));\r\n    }\r\n  }, [TournamentEdit, Dispatch, Token, TournamentId]);\r\n\r\n  useEffect(() => {\r\n    if (TournamentEdit && TournamentDetails) {\r\n      setValues({\r\n        name: TournamentDetails.name || \"\",\r\n        startDate: TournamentDetails.startDate || \"\",\r\n        endDate: TournamentDetails.endDate || \"\",\r\n        tournamentStatus: TournamentDetails.status || \"\",\r\n        numberOfDivisions: TournamentDetails.numberOfDivisions || \"\",\r\n        whoIsComing: TournamentDetails.showWhoIsComing,\r\n        showRegisteredTeams: TournamentDetails.showNumberOfRegisteredTeams,\r\n        description : TournamentDetails.description\r\n      });\r\n    }\r\n  }, [TournamentDetails, TournamentEdit, setValues]);\r\n  const today = new Date().toISOString().split(\"T\")[0];\r\n  return (\r\n    <>\r\n      <h4 className=\"my-3 fw-bold\">\r\n        {TournamentEdit ? \"Update Tournament\" : \"Add Tournament\"}\r\n      </h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <Row className=\"row gy-3 row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2\">\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <InputField\r\n              type=\"text\"\r\n              name=\"name\"\r\n              label=\"Tournament Name\"\r\n              onChange={handleChange}\r\n              value={values.name}\r\n              className=\"form-control\"\r\n              touched={touched.name}\r\n              error={errors.name}\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n            <div className=\"d-flex flex-column flex-grow-1\">          \r\n            <InputField\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                label=\"Tournament Description\"\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                className=\"form-control\"\r\n                touched={touched.description}\r\n                error={errors.description}\r\n              />\r\n            </div>\r\n\r\n\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"startDate\"\r\n              label=\"Start Date\"\r\n              onChange={handleChange}\r\n              value={values.startDate}\r\n              className=\"form-control\"\r\n              touched={touched.startDate}\r\n              error={errors.startDate}\r\n              min={today}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"endDate\"\r\n              label=\"End Date\"\r\n              onChange={handleChange}\r\n              value={values.endDate}\r\n              className=\"form-control\"\r\n              touched={touched.endDate}\r\n              error={errors.endDate}\r\n              min={values.startDate || today}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <SelectTag\r\n              options={tournamentStatusOptions}\r\n              onChange={handleChange}\r\n              deFaultValue=\"Select Status\"\r\n              label=\"Status\"\r\n              name=\"tournamentStatus\"\r\n              touched={touched.tournamentStatus}\r\n              error={errors.tournamentStatus}\r\n              value={values.tournamentStatus}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <InputField\r\n              type=\"number\"\r\n              name=\"numberOfDivisions\"\r\n              label=\"Number Of Divisions\"\r\n              onChange={handleChange}\r\n              value={values.numberOfDivisions}\r\n              className=\"form-control\"\r\n              touched={touched.numberOfDivisions}\r\n              error={errors.numberOfDivisions}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column  flex-grow-1\">\r\n            <SelectTag\r\n              deFaultValue=\"Select Venue\"\r\n              label=\"Select Venue *\"\r\n              name=\"venueId\"\r\n              options={VenueStatusOptions}\r\n              value={values.venueId}\r\n              onChange={handleChange}\r\n              touched={touched.venueId}\r\n              error={errors.venueId}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"whoIsComingSwitch\"\r\n                name=\"whoIsComing\"\r\n                checked={values.whoIsComing}\r\n                onChange={() =>\r\n                  setFieldValue(\"whoIsComing\", !values.whoIsComing)\r\n                }\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"whoIsComingSwitch\">\r\n                Who's Coming\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column flex-grow-1\">\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"showRegisteredTeamsSwitch\"\r\n                name=\"showRegisteredTeams\"\r\n                checked={values.showRegisteredTeams}\r\n                onChange={() =>\r\n                  setFieldValue(\r\n                    \"showRegisteredTeams\",\r\n                    !values.showRegisteredTeams\r\n                  )\r\n                }\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"showRegisteredTeamsSwitch\"\r\n              >\r\n                Show Registered Teams\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center flex-grow-1 \">\r\n            <button type=\"submit\" className=\"mt-3 gradient-btn-orange rounded\">\r\n              {isLoading ? <SpinNer /> : \"Submit\"}\r\n            </button>\r\n          </div>\r\n        </Row>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTournamentFields;\r\n","import React, { useState } from \"react\";\r\nimport AddTournamentFields from \"../../components/tournament/AddTournamentFields\";\r\nimport DashboardLayout from \"../../layout/DashboardLayout\";\r\nimport AddDivisionFields from \"../../components/Division/AddDivisionFields\";\r\nconst AddTournament = () => {\r\n  const [state, setState] = useState(\"tournamentForm\");\r\n  const handleCheckboxChange = () => {\r\n    setState((prevState) =>\r\n      prevState === \"tournamentForm\" ? \"divisionForm\" : \"tournamentForm\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex gap-3 justify-content-end align-items-center\">\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" onChange={handleCheckboxChange} />\r\n          <span className=\"slider\"></span>\r\n        </label>\r\n        <p className=\"p-0 m-0 fw-bold\">\r\n          {state === \"tournamentForm\" ? \"Division Form\" : \"Tournament Form\"}\r\n        </p>\r\n      </div>\r\n      {state === \"tournamentForm\" ? (\r\n        <AddTournamentFields />\r\n      ) : (\r\n        <AddDivisionFields />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout(AddTournament);\r\n"],"names":["Dispatch","useDispatch","user","useSelector","state","TournamentDetails","tournament","venue","VenueData","isLoading","useContext","GlobalInfo","TournamentEdit","TournamentId","Navigate","useNavigate","Token","access_token","VenueStatusOptions","data","length","map","item","value","venueId","label","name","useFormik","initialValues","startDate","endDate","tournamentStatus","numberOfDivisions","whoIsComing","showRegisteredTeams","description","validationSchema","AllTournamentSchemas","onSubmit","values","action","showWhoIsComing","showNumberOfRegisteredTeams","Number","UpdateTournaments","Add_Tournaments","resetForm","handleChange","errors","handleSubmit","setValues","touched","setFieldValue","useEffect","GetTournamentsDetailsByTournamentId","status","today","Date","toISOString","split","className","Row","InputField","type","onChange","error","min","SelectTag","options","deFaultValue","id","checked","htmlFor","SpinNer","DashboardLayout","useState","setState","prevState","AddDivisionFields"],"sourceRoot":""}