{"version":3,"file":"static/js/825.ec16deee.chunk.js","mappings":"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","sources":["components/Models/DeleteModel.jsx","components/SkeletonTable/SkeletonTable.js","components/Person/AllPersonsTable.js","pages/Dashboard/AllPerson.js","shared/PageHeader.js","store/person/actions/actionsCreators.js"],"sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction DeleteModel({ show, onClose,OnDelete ,title}) {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                size=\"md\"\r\n                show={show}\r\n                onHide={onClose}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                        Delete  {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <h6 className='text-nowrap fw-semibold'>Are u Sure to delete this {title} ?</h6>\r\n                    <div className=\"text-end mt-4\">\r\n                        <Button variant='danger'   onClick={OnDelete}>Confirm</Button>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeleteModel;","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst TableSkeleton = ({ rows = 5, columns = 5, baseColor = \"#afafaf\", highlightColor = \"#afafaf\" }) => {\r\n    return (\r\n        <tbody>\r\n            {Array.from({ length: rows }).map((_, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                    {Array.from({ length: columns }).map((_, colIndex) => (\r\n                        <td key={colIndex}>\r\n                            <Skeleton\r\n                                height={20}\r\n                                width=\"100%\"\r\n                                baseColor={baseColor}\r\n                                highlightColor={highlightColor}\r\n                            />\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default TableSkeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Table, Form } from \"react-bootstrap\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { BsEye } from \"react-icons/bs\";\r\n// import { CiEdit } from \"react-icons/ci\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../../assets/css/products-table.css\";\r\nimport {\r\n  DelPersons,\r\n  GetPersons,\r\n  getPersonsbySearch,\r\n} from \"../../store/person/actions/actionsCreators\";\r\nimport DeleteModel from \"../Models/DeleteModel\";\r\nimport { PaginationControl } from \"react-bootstrap-pagination-control\";\r\n// import { GlobalInfo } from \"../../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TableSkeleton from \"../SkeletonTable/SkeletonTable\";\r\nconst AllPersonsTable = () => {\r\n  const { PersonData, isLoading } = useSelector((state) => state.person);\r\n  const { token } = useSelector((state) => state.user);\r\n  const [page, setPage] = useState(0);\r\n  const [deleteModel, setDeleteModel] = useState(false);\r\n  const [personId, setPersonid] = useState(null);\r\n  const Dispatch = useDispatch();\r\n  const Navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    Dispatch(GetPersons(page, token));\r\n  }, [Dispatch, page, token]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setPage(newPage - 1);\r\n  };\r\n\r\n  const handleDeletePersonbtn = (id) => {\r\n    setDeleteModel(true);\r\n    setPersonid(id);\r\n  };\r\n  const handleEyebtn = (id) => {\r\n    Navigate(`/dashboard/allpersons/${id}`);\r\n  };\r\n\r\n  const handleDeletePerson = () => {\r\n    Dispatch(\r\n      DelPersons(personId, token, () => {\r\n        Dispatch(GetPersons(page, token));\r\n        setDeleteModel(false);\r\n      })\r\n    );\r\n  };\r\n  const handleCloseModel = () => {\r\n    setDeleteModel(false);\r\n  };\r\n  const handleSearchPersons = (value) => {\r\n    const searchValue = value.target.value;\r\n    if (searchValue === \"\") {\r\n      Dispatch(GetPersons(page, token));\r\n    } else {\r\n      Dispatch(getPersonsbySearch(value.target.value, page));\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section-main m-3 px-3 py-4 rounded-lg shadow-lg max-w-4xl \">\r\n        <Row className=\"mb-3\">\r\n          <Col sm={12} md={4} lg={4}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              onChange={handleSearchPersons}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\r\n          {isLoading ? (\r\n            <Table>\r\n              <TableSkeleton\r\n                rows={10}\r\n                columns={7}\r\n                baseColor=\"#afafaf\"\r\n                highlightColor=\"#afafaf\"\r\n              />\r\n            </Table>\r\n          ) : (\r\n            <Table responsive hover size=\"sm\" className=\" mt-2\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>email</th>\r\n                  <th>Role</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* {isLoading && <div>Loading...</div>} */}\r\n                {PersonData?.data?.length > 0 ? (\r\n                  PersonData?.data?.map((item, index) => (\r\n                    <tr key={index} className=\"main-row\">\r\n                      <td>{item.firstName + \" \" + item.lastName}</td>\r\n                      <td>{item.email}</td>\r\n                      <td>{item.role}</td>\r\n                      <td>\r\n                        <div>\r\n                          <BsEye\r\n                            className=\"action-icon eye-icon\"\r\n                            onClick={() => handleEyebtn(item?.id)}\r\n                          />\r\n                          {/* <CiEdit className='action-icon edit-icon' onClick={() => handleEditbtn(item?.id)} /> */}\r\n                          <AiOutlineDelete\r\n                            className=\"action-icon delete-icon\"\r\n                            onClick={() => handleDeletePersonbtn(item?.id)}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"5\" className=\"text-center\">\r\n                      No Persons Available\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n          {PersonData?.totalRecords > 10 && (\r\n            <PaginationControl\r\n              page={page + 1}\r\n              between={1}\r\n              limit={10}\r\n              total={PersonData?.totalRecords}\r\n              changePage={(page) => handlePageChange(page)}\r\n              ellipsis={1}\r\n            />\r\n          )}\r\n\r\n          {deleteModel && (\r\n            <DeleteModel\r\n              show={DeleteModel}\r\n              onClose={handleCloseModel}\r\n              OnDelete={handleDeletePerson}\r\n              title=\"Person\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {PersonData?.totalRecords > 10 && (\r\n        <PaginationControl\r\n          page={page + 1}\r\n          between={3}\r\n          limit={10}\r\n          total={PersonData?.totalRecords}\r\n          changePage={(page) => setPage(page - 1)}\r\n          ellipsis={1}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllPersonsTable;\r\n","import React from 'react'\r\nimport PageHeader from '../../shared/PageHeader.js'\r\nimport DashboardLayout from '../../layout/DashboardLayout';\r\nimport AllPersonsTable from '../../components/Person/AllPersonsTable.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst AllPerson = () => {\r\n    const Navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <PageHeader title=\"All User\" subtitle=\"Manage Your Users\" btnText=\"Add New User\" onClick={() => Navigate('/dashboard/addperson')} />\r\n            <AllPersonsTable />\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DashboardLayout(AllPerson)","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdOutlineAdd } from 'react-icons/md';\r\nimport '../assets/css/page-header.css';\r\n\r\nconst PageHeader = ({ title, subtitle, btnText, onClick, className }) => {\r\n    if (!btnText) {\r\n        return (\r\n            <React.Fragment>\r\n                <Col>\r\n                    <div className='mt-3'>\r\n                        <h3 className='header-title'>{title}</h3>\r\n                        <h4 className='header-subtitle'>{subtitle}</h4>\r\n                    </div>\r\n                </Col>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Row className='m-3 row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2  '>\r\n                <Col>\r\n                    <div>\r\n                        <h3 className='header-title'>{title}</h3>\r\n                        <h4 className='header-subtitle'>{subtitle}</h4>\r\n                    </div>\r\n                </Col>\r\n                <Col className='text-start text-md-end text-lg-end'>\r\n                    <button className={`rounded ${btnText.trim() === 'Team Register' ? 'Team-register-btn' : 'gradient-btn-orange'} p-2`}\r\n                        onClick={onClick}><MdOutlineAdd fontSize={20} />{btnText}</button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageHeader;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport Toast from \"../../../shared/Toast\";\r\nconst Url = process.env.REACT_APP_MAIN_URL;\r\nexport const Add_Persons = (data, Token, Navigate, role) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/initial-registration`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: actionTypes.ADD_PERSONS,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      if (role === \"ADMIN\") {\r\n        Navigate(\"/dashboard/allpersons\");\r\n      } else {\r\n        Navigate(\"/dashboard/allteams\");\r\n      }\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.message);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const Update_Persons = (data, id, Token, callback) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .put(`${Url}api/persons/${id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n\r\n    .then((response) => {\r\n      console.log(response)\r\n      dispatch({\r\n        type: actionTypes.UPDATE_PERSON,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n\r\n      Toast.success(response.data.message);\r\n      if (callback) callback();\r\n\r\n    })\r\n    .catch((error) => {\r\n      Toast.success(error?.data?.message);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const GetPersons = (page, token) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .get(`${Url}api/persons?page=${page}&size=10`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response, 'response')\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 404) {\r\n        dispatch({\r\n          type: actionTypes.GET_PERSONS,\r\n          payload: [],\r\n        });\r\n      }\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const getPersonsbySearch = (value, page) => (dispatch) => {\r\n  axios\r\n    .get(`${Url}api/persons/search?name=${value.toLowerCase()}&page=${page}&size=10`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 404) {\r\n        dispatch({\r\n          type: actionTypes.GET_PERSONS,\r\n          payload: []\r\n        });\r\n      }\r\n    });\r\n};\r\nexport const GetPersonsById = (id, Token) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .get(`${Url}api/persons/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS_BY_ID,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const DelPersons = (Personid, token, callback) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .delete(`${Url}api/persons/${Personid}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.Delete_PERSONS,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n      if (callback) callback();\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      Toast.error(error.response.data.message);\r\n    });\r\n};\r\n\r\nexport const GetPerson =\r\n  (id, Token) =>\r\n    (dispatch) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      axios\r\n        .get(\r\n          `${Url}api/persons/${id}`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${Token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log('aljsbdjagbsdjkaldhnkahsdk')\r\n          console.log(response, 'res')\r\n          dispatch({\r\n            type: actionTypes.GET_PERSON,\r\n            payload: response.data.data,\r\n          });\r\n          dispatch({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          Toast.success(error.response.data.message);\r\n          dispatch({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: false,\r\n          });\r\n        });\r\n    };\r\nexport const ForgetPassword = (email, Navigate) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/forgot-password?email=${email}`, {})\r\n    .then((response) => {\r\n      console.log(\r\n        \"🚀 : ~ file: actionsCreators.js:135 ~ .then ~ response\",\r\n        response\r\n      );\r\n      dispatch({\r\n        type: actionTypes.FORGET_PASSWORD,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Navigate(\"/auth/reset-password\");\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response.data.error);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const ResetPassword = (email, pass, otp, navigate) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(\r\n      `${Url}api/persons/reset-password?email=${email}&newPassword=${pass}&token=${otp}\r\n`,\r\n      {}\r\n    )\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: actionTypes.GET_PERSON,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n      navigate(\"/auth/login\");\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response.data.error);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const UploadPersonImg = (id, Token, file) => (dispatch) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/${id}/upload-picture`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((response) => {\r\n\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response?.data?.message || \"An error occurred\");\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};"],"names":["show","onClose","OnDelete","title","size","onHide","closeButton","id","className","variant","onClick","rows","columns","baseColor","highlightColor","Array","from","length","map","_","rowIndex","colIndex","height","width","useSelector","state","person","PersonData","isLoading","token","user","useState","page","setPage","deleteModel","setDeleteModel","personId","setPersonid","Dispatch","useDispatch","Navigate","useNavigate","useEffect","GetPersons","Row","Col","sm","md","lg","Form","type","placeholder","onChange","value","searchValue","target","getPersonsbySearch","style","maxHeight","overflowY","Table","responsive","hover","data","item","index","firstName","lastName","email","role","colSpan","totalRecords","between","limit","total","changePage","ellipsis","DeleteModel","DelPersons","DashboardLayout","PageHeader","subtitle","btnText","trim","fontSize","Url","process","Add_Persons","Token","dispatch","actionTypes","payload","axios","headers","Authorization","then","response","console","log","Toast","message","catch","error","Update_Persons","callback","status","toLowerCase","GetPersonsById","Personid","ForgetPassword","ResetPassword","pass","otp","navigate","UploadPersonImg","file","formData","FormData","append"],"sourceRoot":""}