{"version":3,"file":"static/js/95.59ed35e7.chunk.js","mappings":"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","sources":["components/product/InputField.jsx","components/Person/AddPersonFields.js","pages/Dashboard/AddPerson.js","store/person/actions/actionsCreators.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst InputField = ({\r\n  label,\r\n  type,\r\n  touched,\r\n  value,\r\n  error,\r\n  className,\r\n  labelClassName,\r\n  min,\r\n  ...props\r\n}) => {\r\n  const isTextArea = type === \"textarea\";\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.name} className={labelClassName ?? \"\"}>\r\n        {label}\r\n      </label>\r\n      {isTextArea ? (\r\n        <textarea\r\n          {...props}\r\n          value={value ?? \"\"}\r\n          className={className}\r\n          rows={4} // You can adjust number of rows here\r\n        />\r\n      ) : (\r\n        <input\r\n          {...props}\r\n          value={value ?? \"\"}\r\n          type={type}\r\n          className={className}\r\n          autoComplete=\"off\"\r\n          min={type === \"number\" ? 0 : min}\r\n        />\r\n      )}\r\n      {touched && error ? <p className=\"text-danger\">{error}</p> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputField;","import React, { useContext } from 'react'\r\nimport InputField from '../product/InputField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row } from 'react-bootstrap';\r\nimport SelectTag from '../product/SelectTag';\r\nimport { Add_Persons, Update_Persons } from '../../store/person/actions/actionsCreators';\r\nimport { useFormik } from 'formik';\r\nimport SpinNer from '../LoadingSpinner/SpinNer';\r\nimport { AddPersonSchema } from '../../Schemas/Schemas';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GlobalInfo } from '../../App';\r\nconst AddPersonFields = () => {\r\n    const Dispatch = useDispatch()\r\n    const { user } = useSelector((state) => state.user)\r\n    const role = user?.roles[0] || user?.role\r\n    const { UserEdit, UserId } = useContext(GlobalInfo)\r\n    const { isLoading } = useSelector((state) => state.person)\r\n    const Token = user?.access_token\r\n    const Navigate = useNavigate()\r\n    const initialValues = {\r\n        email: '',\r\n        role: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        mobilePhone: \"\",\r\n        tournamentsPlayed: null,\r\n        playerStatus: '',\r\n        gamesPlayed: null,\r\n        driverLicenseId: '',\r\n        dateOfBirth: '',\r\n        middleName: ''\r\n    };\r\n\r\n    const { values, handleChange, errors, handleSubmit, touched, setValues } = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: AddPersonSchema,\r\n        onSubmit: (values, action) => {\r\n            let formattedDate = \"\";\r\n            if (values.dateOfBirth) {\r\n                const date = new Date(values.dateOfBirth);\r\n                const year = date.getFullYear();\r\n                const month = String(date.getMonth() + 1).padStart(2, '0');\r\n                const day = String(date.getDate()).padStart(2, '0');\r\n                formattedDate = `${month}/${day}/${year}`;\r\n            }\r\n            const data = {\r\n                email: values.email,\r\n                role: values.role,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                mobilePhone: values.mobilePhone,\r\n                playerStatus: \"INACTIVE\",\r\n                personAPlayer: values?.role === 'PLAYER' ? true : false,\r\n                driverLicenseId: values.driverLicenseId,\r\n                dateOfBirth: formattedDate,\r\n                middleName: values.middleName\r\n            }\r\n            if (UserEdit) {\r\n                Dispatch(Update_Persons(data, UserId, Token, Navigate, role))\r\n            } else {\r\n                Dispatch(Add_Persons(data, Token, Navigate, role))\r\n\r\n            }\r\n            action.resetForm();\r\n\r\n        }\r\n    });\r\n\r\n    let roleOptions\r\n\r\n    if (role === \"ADMIN\") {\r\n        roleOptions = [\r\n            { value: 'CO_MANAGER', label: ' CO MANAGER' },\r\n            { value: 'MANAGER', label: 'MANAGER' },\r\n            { value: 'PLAYER', label: 'PLAYER' },\r\n        ]\r\n    } else {\r\n        roleOptions = [\r\n            { value: 'CO_MANAGER', label: ' CO MANAGER' },\r\n            { value: 'PLAYER', label: 'PLAYER' },\r\n        ]\r\n    }\r\n\r\n    //     console.log(\"User edit and person details use effect ...................\")\r\n    //     if (UserEdit && PersonDetails) {\r\n    //         setValues({\r\n    //             email: PersonDetails.email || '',\r\n    //             name: PersonDetails.name || '',\r\n    //             role: PersonDetails.role || '',\r\n    //             firstName: PersonDetails.firstName || '',\r\n    //             lastName: PersonDetails.lastName || '',\r\n    //             address1: PersonDetails.address1 || '',\r\n    //             address2: PersonDetails.address2 || '',\r\n    //             points: PersonDetails.points || '',\r\n    //             ranking: PersonDetails.ranking || '',\r\n    //             division: PersonDetails.division || '',\r\n    //             city: PersonDetails.city || '',\r\n    //             state: PersonDetails.state || '',\r\n    //             zipCode: PersonDetails.zipCode || '',\r\n    //             mobilePhone: PersonDetails.mobilePhone || '',\r\n    //             playerStatus: PersonDetails || '',\r\n    //             tournamentsPlayed: values.tournamentsPlayed || '',\r\n    //             gamesPlayed: PersonDetails.gamesPlayed || '',\r\n    //         });\r\n    //     }\r\n    // }, [PersonDetails, UserEdit, setValues]);\r\n    return (\r\n        <div className='mt-3'>\r\n            <h2 className='mb-3 fw-bold'>{UserEdit ? 'Update User' : 'Add User'}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <Row className='row gy-3 row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2'>\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            label=\"First Name\"\r\n                            onChange={handleChange}\r\n                            value={values.firstName}\r\n                            className=\"form-control\"\r\n                            touched={touched.firstName}\r\n                            error={errors.firstName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            onChange={handleChange}\r\n                            value={values.lastName}\r\n                            className=\"form-control\"\r\n                            touched={touched.lastName}\r\n                            error={errors.lastName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            label=\"Middle Name (Optional)\"\r\n                            onChange={handleChange}\r\n                            value={values.middleName}\r\n                            className=\"form-control\"\r\n                            touched={touched.middleName}\r\n                            error={errors.middleName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            className=\"form-control\"\r\n                            touched={touched.email}\r\n                            error={errors.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex  flex-column flex-grow-1\">\r\n                        <SelectTag\r\n                            options={roleOptions}\r\n                            className=\"d-flex flex-grow-1  bg-white form-control  \"\r\n                            name=\"role\"\r\n                            label='User Type'\r\n                            value={values.role}\r\n                            deFaultValue=\"Select User Type\"\r\n                            onChange={handleChange}\r\n                            touched={touched.role}\r\n                            error={errors.role}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"text\"\r\n                            name=\"mobilePhone\"\r\n                            label=\"Mobile Phone\"\r\n                            onChange={handleChange}\r\n                            value={values.mobilePhone}\r\n                            className=\"form-control\"\r\n                            touched={touched.mobilePhone}\r\n                            error={errors.mobilePhone}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"date\"\r\n                            name=\"dateOfBirth\"\r\n                            label=\"Date of Birth\"\r\n                            onChange={handleChange}\r\n                            value={values.dateOfBirth}\r\n                            className=\"form-control\"\r\n                            touched={touched.mobilePhone}\r\n                            error={errors.dateOfBirth}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1\">\r\n                        <InputField\r\n                            type=\"text\"\r\n                            name=\"driverLicenseId\"\r\n                            label=\"Driver License Id\"\r\n                            onChange={handleChange}\r\n                            value={values.driverLicenseId}\r\n                            className=\"form-control\"\r\n                            touched={touched.driverLicenseId}\r\n                            error={errors.driverLicenseId}\r\n                        />\r\n                    </div>\r\n                </Row>\r\n                <div className=\"d-flex justify-content-center \">\r\n                    <button type=\"submit\" className=\"mt-3 gradient-btn-orange\" >\r\n                        {isLoading ? <SpinNer /> : \"Submit\"}\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPersonFields;\r\n","import React from 'react'\r\nimport AddPersonFields from '../../components/Person/AddPersonFields'\r\nimport DashboardLayout from '../../layout/DashboardLayout'\r\nconst AddPerson = () => {\r\n  return (\r\n  <AddPersonFields/>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout(AddPerson)","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport Toast from \"../../../shared/Toast\";\r\nconst Url = process.env.REACT_APP_MAIN_URL;\r\nexport const Add_Persons = (data, Token, Navigate, role) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/initial-registration`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: actionTypes.ADD_PERSONS,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      if (role === \"ADMIN\") {\r\n        Navigate(\"/dashboard/allpersons\");\r\n      } else {\r\n        Navigate(\"/dashboard/allteams\");\r\n      }\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.message);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const Update_Persons = (data, id, Token, callback) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .put(`${Url}api/persons/${id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n\r\n    .then((response) => {\r\n      console.log(response)\r\n      dispatch({\r\n        type: actionTypes.UPDATE_PERSON,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n\r\n      Toast.success(response.data.message);\r\n      if (callback) callback();\r\n\r\n    })\r\n    .catch((error) => {\r\n      Toast.success(error?.data?.message);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const GetPersons = (page, token) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .get(`${Url}api/persons?page=${page}&size=10`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response, 'response')\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 404) {\r\n        dispatch({\r\n          type: actionTypes.GET_PERSONS,\r\n          payload: [],\r\n        });\r\n      }\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const getPersonsbySearch = (value, page) => (dispatch) => {\r\n  axios\r\n    .get(`${Url}api/persons/search?name=${value.toLowerCase()}&page=${page}&size=10`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 404) {\r\n        dispatch({\r\n          type: actionTypes.GET_PERSONS,\r\n          payload: []\r\n        });\r\n      }\r\n    });\r\n};\r\nexport const GetPersonsById = (id, Token) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .get(`${Url}api/persons/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS_BY_ID,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const DelPersons = (Personid, token, callback) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .delete(`${Url}api/persons/${Personid}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.Delete_PERSONS,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n      if (callback) callback();\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      Toast.error(error.response.data.message);\r\n    });\r\n};\r\n\r\nexport const GetPerson =\r\n  (id, Token) =>\r\n    (dispatch) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      axios\r\n        .get(\r\n          `${Url}api/persons/${id}`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${Token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log('aljsbdjagbsdjkaldhnkahsdk')\r\n          console.log(response, 'res')\r\n          dispatch({\r\n            type: actionTypes.GET_PERSON,\r\n            payload: response.data.data,\r\n          });\r\n          dispatch({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          Toast.success(error.response.data.message);\r\n          dispatch({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: false,\r\n          });\r\n        });\r\n    };\r\nexport const ForgetPassword = (email, Navigate) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/forgot-password?email=${email}`, {})\r\n    .then((response) => {\r\n      console.log(\r\n        \"🚀 : ~ file: actionsCreators.js:135 ~ .then ~ response\",\r\n        response\r\n      );\r\n      dispatch({\r\n        type: actionTypes.FORGET_PASSWORD,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Navigate(\"/auth/reset-password\");\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response.data.error);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const ResetPassword = (email, pass, otp, navigate) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(\r\n      `${Url}api/persons/reset-password?email=${email}&newPassword=${pass}&token=${otp}\r\n`,\r\n      {}\r\n    )\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: actionTypes.GET_PERSON,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n      navigate(\"/auth/login\");\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response.data.error);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const UploadPersonImg = (id, Token, file) => (dispatch) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/${id}/upload-picture`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((response) => {\r\n\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response?.data?.message || \"An error occurred\");\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};"],"names":["label","type","touched","value","error","className","labelClassName","min","props","isTextArea","htmlFor","name","rows","autoComplete","roleOptions","Dispatch","useDispatch","user","useSelector","state","role","roles","useContext","GlobalInfo","UserEdit","UserId","isLoading","person","Token","access_token","Navigate","useNavigate","useFormik","initialValues","email","firstName","lastName","mobilePhone","tournamentsPlayed","playerStatus","gamesPlayed","driverLicenseId","dateOfBirth","middleName","validationSchema","AddPersonSchema","onSubmit","values","action","formattedDate","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","data","personAPlayer","Update_Persons","Add_Persons","resetForm","handleChange","errors","handleSubmit","setValues","Row","InputField","onChange","SelectTag","options","deFaultValue","SpinNer","DashboardLayout","Url","process","dispatch","actionTypes","payload","axios","headers","Authorization","then","response","console","log","Toast","message","catch","id","callback","GetPersons","page","token","status","getPersonsbySearch","toLowerCase","GetPersonsById","DelPersons","Personid","ForgetPassword","ResetPassword","pass","otp","navigate","UploadPersonImg","file","formData","FormData","append"],"sourceRoot":""}