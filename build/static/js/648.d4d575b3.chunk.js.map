{"version":3,"file":"static/js/648.d4d575b3.chunk.js","mappings":"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","sources":["components/Login/ForgerPasswordForm.jsx","pages/Login/ForgetPassword.js","store/person/actions/actionsCreators.js"],"sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport TextField from \"../../shared/TextField\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ForgetPasswordSchema } from \"../../Schemas/Schemas\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ForgetPassword } from \"../../store/person/actions/actionsCreators\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\nimport SpinNer from \"../LoadingSpinner/SpinNer\";\r\nconst ForgerPasswordForm = () => {\r\n  const { isLoading } = useSelector((state) => state.person);\r\n\r\n  const Navigate = useNavigate();\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n  const Dispatch = useDispatch();\r\n  const handlesubmit = (values, action) => {\r\n    action.resetForm();\r\n    // Add the logic to handle the password reset here.\r\n    localStorage.setItem(\r\n      \"forget-password-email\",\r\n      JSON.stringify(values?.email)\r\n    );\r\n    Dispatch(ForgetPassword(values.email, Navigate));\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-space px-lg-5 mx-xl-5 d-flex flex-column align-items-center mt-5 pt-5 justify-content-center \">\r\n      <Image\r\n        fluid\r\n        className=\"field-icon\"\r\n        src=\"https://usmlsa.com/wp-content/uploads/2023/10/usmlsa_new_png-Copy.png\"\r\n        loading=\"lazy\"\r\n        width={200}\r\n        height={100}\r\n      />\r\n      <h5 className=\"text-white\">Forget Password</h5>\r\n      <small className=\"text-white py-2\">\r\n        Don't worry! it happens. Please enter your email address to get code.\r\n      </small>\r\n      <Formik\r\n        onSubmit={handlesubmit}\r\n        initialValues={initialValues}\r\n        validationSchema={ForgetPasswordSchema}\r\n      >\r\n        {(formik) => (\r\n          <Form>\r\n            <Row>\r\n              <Col className=\"d-flex flex-column\">\r\n                <TextField\r\n                  icon={<FaEnvelope />}\r\n                  placeholder=\"Enter Your Email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                />\r\n              </Col>\r\n              <div className=\"d-flex justify-content-center mb-3 px-0\">\r\n                <button type=\"submit\" className=\"mt-3 gradient-btn-orange\">\r\n                  {isLoading ? <SpinNer /> : \"Send\"}\r\n                </button>\r\n              </div>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {/* <small className=\"auth-subheading fw-bold text-end text-white\">\r\n              Already have an account?\r\n              <Link to=\"/auth/login\" className=\"text-decoration-none fs-6\">\r\n                <span className=\"forget ps-1\">Login</span>\r\n              </Link>\r\n            </small> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgerPasswordForm;\r\n","import React from 'react'\r\nimport ForgerPasswordForm from '../../components/Login/ForgerPasswordForm'\r\nimport AuthLayout from '../../layout/AuthLayout'\r\nconst ForgetPassword = () => {\r\n  return (\r\n    <ForgerPasswordForm />\r\n  )\r\n}\r\n\r\nexport default AuthLayout(ForgetPassword)","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport Toast from \"../../../shared/Toast\";\r\nconst Url = process.env.REACT_APP_MAIN_URL;\r\nexport const Add_Persons = (data, Token, Navigate, role) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/initial-registration`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: actionTypes.ADD_PERSONS,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      if (role === \"ADMIN\") {\r\n        Navigate(\"/dashboard/allpersons\");\r\n      } else {\r\n        Navigate(\"/dashboard/allteams\");\r\n      }\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.message);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const Update_Persons = (data, id, Token, callback) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .put(`${Url}api/persons/${id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n\r\n    .then((response) => {\r\n      console.log(response)\r\n      dispatch({\r\n        type: actionTypes.UPDATE_PERSON,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n\r\n      Toast.success(response.data.message);\r\n      if (callback) callback();\r\n\r\n    })\r\n    .catch((error) => {\r\n      Toast.success(error?.data?.message);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const GetPersons = (page, token) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .get(`${Url}api/persons?page=${page}&size=10`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response, 'response')\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 404) {\r\n        dispatch({\r\n          type: actionTypes.GET_PERSONS,\r\n          payload: [],\r\n        });\r\n      }\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const getPersonsbySearch = (value, page) => (dispatch) => {\r\n  axios\r\n    .get(`${Url}api/persons/search?name=${value.toLowerCase()}&page=${page}&size=10`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 404) {\r\n        dispatch({\r\n          type: actionTypes.GET_PERSONS,\r\n          payload: []\r\n        });\r\n      }\r\n    });\r\n};\r\nexport const GetPersonsById = (id, Token) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .get(`${Url}api/persons/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.GET_PERSONS_BY_ID,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const DelPersons = (Personid, token, callback) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .delete(`${Url}api/persons/${Personid}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionTypes.Delete_PERSONS,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n      if (callback) callback();\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      Toast.error(error.response.data.message);\r\n    });\r\n};\r\n\r\nexport const GetPerson =\r\n  (id, Token) =>\r\n    (dispatch) => {\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: true,\r\n      });\r\n      axios\r\n        .get(\r\n          `${Url}api/persons/${id}`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${Token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log('aljsbdjagbsdjkaldhnkahsdk')\r\n          console.log(response, 'res')\r\n          dispatch({\r\n            type: actionTypes.GET_PERSON,\r\n            payload: response.data.data,\r\n          });\r\n          dispatch({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          Toast.success(error.response.data.message);\r\n          dispatch({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: false,\r\n          });\r\n        });\r\n    };\r\nexport const ForgetPassword = (email, Navigate) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/forgot-password?email=${email}`, {})\r\n    .then((response) => {\r\n      console.log(\r\n        \"🚀 : ~ file: actionsCreators.js:135 ~ .then ~ response\",\r\n        response\r\n      );\r\n      dispatch({\r\n        type: actionTypes.FORGET_PASSWORD,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Navigate(\"/auth/reset-password\");\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response.data.error);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const ResetPassword = (email, pass, otp, navigate) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(\r\n      `${Url}api/persons/reset-password?email=${email}&newPassword=${pass}&token=${otp}\r\n`,\r\n      {}\r\n    )\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: actionTypes.GET_PERSON,\r\n        payload: response.data,\r\n      });\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n      navigate(\"/auth/login\");\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response.data.error);\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\nexport const UploadPersonImg = (id, Token, file) => (dispatch) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  dispatch({\r\n    type: actionTypes.SET_LOADING,\r\n    payload: true,\r\n  });\r\n  axios\r\n    .post(`${Url}api/persons/${id}/upload-picture`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((response) => {\r\n\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n      Toast.success(response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      Toast.error(error.response?.data?.message || \"An error occurred\");\r\n      dispatch({\r\n        type: actionTypes.SET_LOADING,\r\n        payload: false,\r\n      });\r\n    });\r\n};"],"names":["isLoading","useSelector","state","person","Navigate","useNavigate","Dispatch","useDispatch","className","Image","fluid","src","loading","width","height","onSubmit","values","action","resetForm","localStorage","setItem","JSON","stringify","email","ForgetPassword","initialValues","validationSchema","ForgetPasswordSchema","formik","Row","Col","TextField","icon","placeholder","type","name","SpinNer","AuthLayout","Url","process","Add_Persons","data","Token","role","dispatch","actionTypes","payload","axios","headers","Authorization","then","response","console","log","Toast","message","catch","error","Update_Persons","id","callback","GetPersons","page","token","status","getPersonsbySearch","value","toLowerCase","GetPersonsById","DelPersons","Personid","ResetPassword","pass","otp","navigate","UploadPersonImg","file","formData","FormData","append"],"sourceRoot":""}